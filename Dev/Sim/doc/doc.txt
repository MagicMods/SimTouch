├── shaders/
│   ├── shaderLoader.js     # Loads shader files
│   ├── shaderManager.js    # Manages shader programs
│   └── *.{vert,frag}      # Shader source files
├── renderer/
│   ├── gridRenderer.js     # Grid visualization
│   ├── particleRenderer.js # Particle rendering
│   └── debugRenderer.js    # Debug visualization
├── simulation/
│   ├── fluidSim.js        # Main simulation controller
│   └── fluidSolver.js     # Physics solver
└── main.js     




# Coordinate System Standard

## Application Space [0,1]
- All simulation coordinates use [0,1] space
- Origin (0,0) at top-left
- (1,1) at bottom-right
- Center at (0.5, 0.5)
- Circular boundary radius: 0.475

## WebGL Transformation
- Single transformation in vertex shader
- Converts [0,1] to [-1,1] clip space
- No other coordinate transformations in the system




1. Fluid Dynamics
Viscosity simulation
Surface tension
Vorticity confinement
Temperature influence
Density variations
2. Pattern Generation
Voronoi diagrams for particle distribution
Cellular automata rules
Reaction-diffusion patterns
Flocking behavior
Crystal growth patterns
3. Force Fields
Magnetic fields
Electric charge simulation
Wind fields
Vortex fields
Custom force field editor
4. Particle Properties
Particle age/lifetime
Color based on velocity/density
Variable particle masses
Particle merging/splitting
State changes (solid/liquid/gas)
5. Cellular Automata Features
Rule-based behavior
Multi-state particles
Particle-automata interaction
Rule editor
Pattern presets
6. Advanced Visualization
Real-time Voronoi visualization
Density field visualization
Velocity field streamlines
Particle pressure maps
Pattern evolution tracking